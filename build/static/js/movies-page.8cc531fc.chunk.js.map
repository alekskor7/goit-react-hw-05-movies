{"version":3,"sources":["components/MovieList/MovieList.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Form/Form.jsx","views/MoviesPage.jsx"],"names":["MovieList","movies","location","useLocation","style","marginTop","map","movie","marginBottom","to","pathname","id","state","from","title","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Form","handleSubmit","queryURL","URLSearchParams","search","get","useState","setValue","useEffect","onSubmit","e","preventDefault","window","alert","type","autoComplete","name","autoFocus","placeholder","onChange","toLowerCase","marginLeft","MoviesPage","query","setQuery","setMovies","showLoader","setShowLoader","history","useHistory","a","getMoviesByKeyWord","fetchedMovies","toast","error","theme","message","fetchMovies","color","height","width"],"mappings":"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","file":"static/js/movies-page.8cc531fc.chunk.js","sourcesContent":["import { Link, useLocation } from 'react-router-dom';\r\n\r\nexport default function MovieList({ movies }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul style={{ marginTop: '20px' }}>\r\n      {movies.map(movie => (\r\n        <li key={movie.id} style={{ marginBottom: '5px' }}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${movie.id}`,\r\n              state: {\r\n                from: location,\r\n              },\r\n            }}\r\n          >\r\n            {movie.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function Form({ handleSubmit }) {\r\n  const location = useLocation();\r\n  const queryURL = new URLSearchParams(location.search).get('query');\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleChahge = e => {\r\n    const { value } = e.target;\r\n\r\n    setValue(value.toLowerCase());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!queryURL) {\r\n      setValue('');\r\n    }\r\n\r\n    setValue(queryURL);\r\n  }, [queryURL]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        if (!value) {\r\n          window.alert(`Try to type movie title, Please!`);\r\n          return;\r\n        }\r\n\r\n        handleSubmit(value);\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        name=\"query\"\r\n        autoFocus\r\n        value={value ?? ''}\r\n        placeholder=\"Type movie title\"\r\n        onChange={handleChahge}\r\n      />\r\n      <button type=\"submit\" style={{ marginLeft: '10px' }}>\r\n        Search movies\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { getMoviesByKeyWord } from '../Api/Api';\r\nimport Form from '../components/Form';\r\nimport MovieList from '../components/MovieList';\r\n\r\nexport default function MoviesPage() {\r\n  const [query, setQuery] = useState('');\r\n  const [movies, setMovies] = useState(null);\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const queryURL = new URLSearchParams(location.search).get('query');\r\n\r\n  useEffect(() => {\r\n    if (!queryURL) {\r\n      setMovies(null);\r\n      return;\r\n    }\r\n\r\n    async function fetchMovies() {\r\n      try {\r\n        setShowLoader(true);\r\n        const fetchedMovies = await getMoviesByKeyWord(queryURL ?? query);\r\n\r\n        if (!fetchedMovies.length) {\r\n          toast.error('Enter proper query', { theme: 'colored' });\r\n        }\r\n\r\n        setMovies(fetchedMovies);\r\n      } catch (error) {\r\n        toast.error(error.message, { theme: 'colored' });\r\n      } finally {\r\n        setShowLoader(false);\r\n      }\r\n    }\r\n\r\n    fetchMovies();\r\n  }, [query, queryURL]);\r\n\r\n  const handleSubmit = value => {\r\n    setQuery(value);\r\n    history.push({ ...location, search: `query=${value}` });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form handleSubmit={handleSubmit} />\r\n\r\n      {showLoader && (\r\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n      )}\r\n\r\n      {movies && <MovieList movies={movies} />}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}